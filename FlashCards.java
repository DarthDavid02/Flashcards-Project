
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author donov
 */
public class FlashCards extends javax.swing.JFrame {

    /**
     * Creates new form FlashCards
     */
    
//side = 0 = Question ... side = 1 = Answer

//    private String [][] card = {{"4 + 4 =", "8"},{"What is The meaning of Life?", "42"},{"Who's the best?", "You are!"},
//        {"What is a super random fact that absolutely no one would ever even know in their lives" + '\n' + "except that one person who would know it?", "The cake is a lie"}};
    private ArrayList <Cards> flashCards = new ArrayList<Cards>();
    private int cardCount = 0;
    boolean isFlipped = false;
    private FlashCards ref;
    
    public FlashCards() {
        initComponents();
        //makeCardList();
       this.clearDisplayFrame();
    }
    //Since the display and maker frames share an ArrayList, this clears and resets the frame
    //that displays the flashcards
    private void clearDisplayFrame()
    {
       cardNumLabel.setVisible(false);
       nextBtn.setVisible(false);
       prevBtn.setVisible(false);
       flashCardBtn.setText("");
       cardCount=0;
       flashCards.clear();
//       ArrayList <String[]> temp = new ArrayList<String[]>();
//       flashCards = temp;
    }
//    public void makeCardList()
//    {
//       for(int i = 0; i < card.length; i++)
//       {
//           flashCards.add(card[i]);
//       }
//    }

    public void checkVis()
    {
      //hides next button if at end of list so user doesn't go out of bounds
      if(cardCount == flashCards.size()-1)
      {
        nextBtn.setVisible(false);
      }
      else
      {
        nextBtn.setVisible(true);
      }
      
      //hides previous button if at start of list so user doesn't go out of bounds
      if(cardCount == 0)
      {
        prevBtn.setVisible(false);
      }
      else
      {
        prevBtn.setVisible(true);
      }

    }
    public void showCard(int side)
    {
        
        flashCardBtn.setText(flashCards.get(cardCount).getSide(side));
        cardNumLabel.setText((cardCount+1) + "/" + flashCards.size());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveFileFrame = new javax.swing.JFrame();
        openFileFrame = new javax.swing.JFrame();
        prevBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        cardNumLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        flashCardBtn = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        cardMaker = new javax.swing.JMenu();
        cardMakerItem = new javax.swing.JMenuItem();

        saveFileFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        saveFileFrame.setTitle("Export");
        saveFileFrame.setAlwaysOnTop(true);

        javax.swing.GroupLayout saveFileFrameLayout = new javax.swing.GroupLayout(saveFileFrame.getContentPane());
        saveFileFrame.getContentPane().setLayout(saveFileFrameLayout);
        saveFileFrameLayout.setHorizontalGroup(
            saveFileFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        saveFileFrameLayout.setVerticalGroup(
            saveFileFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout openFileFrameLayout = new javax.swing.GroupLayout(openFileFrame.getContentPane());
        openFileFrame.getContentPane().setLayout(openFileFrameLayout);
        openFileFrameLayout.setHorizontalGroup(
            openFileFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        openFileFrameLayout.setVerticalGroup(
            openFileFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        prevBtn.setText("Previous");
        prevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        cardNumLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cardNumLabel.setText("0/0");

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        flashCardBtn.setEditable(false);
        flashCardBtn.setColumns(20);
        flashCardBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        flashCardBtn.setLineWrap(true);
        flashCardBtn.setRows(5);
        flashCardBtn.setWrapStyleWord(true);
        flashCardBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flashCardBtn.setFocusable(false);
        flashCardBtn.setMargin(new java.awt.Insets(35, 35, 35, 35));
        flashCardBtn.setRequestFocusEnabled(false);
        flashCardBtn.setVerifyInputWhenFocusTarget(false);
        flashCardBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                flashCardBtnMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(flashCardBtn);

        jMenu1.setText("File");

        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuItem);

        jMenuBar1.add(jMenu1);

        cardMaker.setText("Options");

        cardMakerItem.setText("Make Flash Cards");
        cardMakerItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardMakerItemActionPerformed(evt);
            }
        });
        cardMaker.add(cardMakerItem);

        jMenuBar1.add(cardMaker);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prevBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(cardNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prevBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBtnActionPerformed
        // TODO add your handling code here:
        --cardCount;
        //resets isFlipped variable to reflect that the question should be showing for new card
        isFlipped = false;
        showCard(0);
        checkVis();
    }//GEN-LAST:event_prevBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        ++cardCount;
        //resets isFlipped variable to reflect that the question should be showing for new card
        isFlipped = false;
        showCard(0);
        checkVis();
    }//GEN-LAST:event_nextBtnActionPerformed

    private void flashCardBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flashCardBtnMousePressed
        // TODO add your handling code here:
        if(isFlipped)
        {
            isFlipped = false;
            if(!flashCards.isEmpty())
            {
                showCard(0);
            }
            
        }
        else
        {
            isFlipped = true;
             if(!flashCards.isEmpty())
            {
                 showCard(1);
            }
           
        }
    }//GEN-LAST:event_flashCardBtnMousePressed

    //sets reference back to original window
    public void setRef(FlashCards r)
    {
        ref = r;
    }
    //opens the frame that will allow a user to make and save flash cards
    private void cardMakerItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardMakerItemActionPerformed
        // TODO add your handling code here:
        //opens up the card maker frame to make the cards
        CardMaker myCards = new CardMaker();
        myCards.setWindowRef(ref);
        myCards.setVisible(true);
         //The two frames share the ArrayList so clear of previous list
         //this.clearDisplayFrame();
         //instead of closing it, make it so user can't use flashcards till cardMaker frame closes
        this.setEnabled(false);
    }//GEN-LAST:event_cardMakerItemActionPerformed

    public void resetEnable()
    {
        this.setEnabled(true);
    }
    //lets the user locate and find a file to be opened and then calls the readFile method to put String data
    //formatted by the saveFile methodinto the ArrayList
    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
        //reset the cards before loading in the new set
        this.clearDisplayFrame();
        JFileChooser fileLoad = new JFileChooser();
        int selection = fileLoad.showOpenDialog(openFileFrame);
        if(selection == JFileChooser.APPROVE_OPTION)
        {
            readFile(fileLoad.getSelectedFile());
            checkVis();
            cardNumLabel.setVisible(true);
            showCard(0);
        }
        
        
            
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void readFile(File selectedFile) 
    {
      
        try {
            BufferedReader reader = new BufferedReader(new FileReader(selectedFile));
            String question = reader.readLine();
            String answer = "";
            int seperator = 0;
            while (question != null) {
                for(int i=0; i < question.length(); ++i)
                {
                    if(question.charAt(i) == '/')
                    {
                        seperator = i;
                        i=question.length();                        
                    }
                }
                    answer = question.substring((seperator+1));  
                    question = question.substring(0, (seperator-1));
                    flashCards.add(new Cards());
                    flashCards.get(flashCards.size()-1).setQuestion(question);
                    flashCards.get(flashCards.size()-1).setAnswer(answer);                   
                    question = reader.readLine();
                }
                reader.close();
            } catch (Exception e) {
                //System.out.println("Error: Couldn't read to file.");
                JOptionPane.showMessageDialog(null, "Error: Couldn't read file.", "Error", JOptionPane.ERROR_MESSAGE);
            }
          
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlashCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlashCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlashCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlashCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FlashCards myWindow = new FlashCards();
                myWindow.setRef(myWindow);
                myWindow.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu cardMaker;
    private javax.swing.JMenuItem cardMakerItem;
    private javax.swing.JLabel cardNumLabel;
    private javax.swing.JTextArea flashCardBtn;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JFrame openFileFrame;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton prevBtn;
    private javax.swing.JFrame saveFileFrame;
    // End of variables declaration//GEN-END:variables
}
